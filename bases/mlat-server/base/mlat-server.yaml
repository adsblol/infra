# A deployment running ghcr.io/katlol/mlat-server
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlat-server
spec:
  strategy:
    type: Recreate
  template:
    spec:
      containers:
      - name: mlat-server
        image: ghcr.io/katlol/mlat-server
        env:
        - {name: MKL_NUM_THREADS, value: "1"}
        - {name: NUMEXPR_NUM_THREADS, value: "1"}
        - {name: OMP_NUM_THREADS, value: "1"}
        - {name: PYTHONOPTIMIZE, value: "2"}
        command:
        - python
        - /app/mlat-server
        - --work-dir=/run/mlat-server
        - --client-listen=31090
        - --filtered-basestation-listen=30104
        ports:
        - containerPort: 31090
          name: mlat-in
        - containerPort: 30104
          name: mlat-out
        volumeMounts:
        - name: mlat-server
          mountPath: /run/mlat-server
      - name: serve-run-http
        image: nginx:alpine
        volumeMounts:
        - name: mlat-server
          mountPath: /usr/share/nginx/html
        - name: serve-run-http-config
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: default.conf
        ports:
        - containerPort: 150
          name: json-stats
      volumes:
      - name: mlat-server
        persistentVolumeClaim:
          claimName: mlat-server
      - name: serve-run-http-config
        configMap:
          name: serve-run-http-config

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mlat-server
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mlat-server
spec:
  ports:
  - name: mlat-in
    port: 31090
    targetPort: mlat-in
    protocol: TCP
  - name: mlat-out
    port: 30104
    targetPort: mlat-out
    protocol: TCP
  - name: json-stats
    port: 150
    targetPort: json-stats
    protocol: TCP
