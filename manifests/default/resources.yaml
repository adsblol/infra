apiVersion: v1
kind: Namespace
metadata:
  name: adsblol
---
apiVersion: v1
kind: Service
metadata:
  name: ingest
  annotations:
    external-dns.alpha.kubernetes.io/hostname: in.adsb.lol,feed.adsb.lol,in.planes.lol,feed.planes.lol
    load-balancer.hetzner.cloud/location: fsn1
    load-balancer.hetzner.cloud/uses-proxyprotocol: "true"
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "false"
spec:
  internalTrafficPolicy: Local
  externalTrafficPolicy: Local
  selector:
    app: haproxy
  ports:
  - name: beast-1337
    port: 1337
    targetPort: beast-1337
    protocol: TCP
  - name: mlat-1338
    port: 1338
    targetPort: mlat-1338
    protocol: TCP
  - name: beast-30004
    port: 30004
    targetPort: beast-30004
    protocol: TCP
  - name: beast-30005
    port: 30005
    targetPort: beast-30005
    protocol: TCP
  - name: mlat-31090
    port: 31090
    targetPort: mlat-31090
    protocol: TCP
  type: LoadBalancer
---
# allow all network in this namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - {}
  egress:
  - {}
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: homepage
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    # /discord -> https://discord.gg/3wPfmyNFRq
    nginx.ingress.kubernetes.io/configuration-snippet: |
      location /discord {
        return 302 https://discord.gg/3wPfmyNFRq;
      }
      location /todo {
        return 302 https://github.com/orgs/adsblol/projects/1/views/1;
      }
spec:
  tls:
  - hosts:
    - adsb.lol
    secretName: adsblol-tls
  rules:
  - host: adsb.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
  - host: planes.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              number: 80
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: adsblol
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  tls:
  - hosts:
    - adsb.lol
    secretName: adsblol-tls
  rules:
  - host: globe.planes.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: planes-readsb
            port:
              name: http
  - host: globe.adsb.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: planes-readsb
            port:
              name: http
  - host: globe.adsb.lol
    http:
      paths:
      - path: /re-api
        pathType: Prefix
        backend:
          service:
            name: planes-readsb
            port:
              name: http-api
  - host: globe.planes.lol
    http:
      paths:
      - path: /re-api
        pathType: Prefix
        backend:
          service:
            name: planes-readsb
            port:
              name: http-api
  - host: test.adsb.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: planes-readsb-test
            port:
              name: http
  - host: test.adsb.lol
    http:
      paths:
      - path: /re-api
        pathType: Prefix
        backend:
          service:
            name: planes-readsb-test
            port:
              name: http-api

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: adsblol-tls
spec:
  secretName: adsblol-tls
  issuerRef:
    name: letsencrypt-cloudflare
    kind: ClusterIssuer
  dnsNames:
  - adsb.lol
  - "*.adsb.lol"
  - "planes.lol"
  - "*.planes.lol"
  - "*.freebnc.net"
  usages:
  - digital signature
  - key encipherment
  - server auth
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: serve-run-http-config
data:
  default.conf: |
    server {
      listen 150;
      server_name _;
      location / {
        root /usr/share/nginx/html;
      }
    }
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: history
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
spec:
  tls:
  - hosts:
    - adsb.lol
    secretName: adsblol-tls
  rules:
  - host: history.adsb.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: history
            port:
              name: http-nginx
---
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: map
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    nginx.ingress.kubernetes.io/app-root: /syncmap
spec:
  tls:
  - hosts:
    - adsb.lol
    secretName: adsblol-tls
  rules:
  - host: map.adsb.lol
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mlat-map
            port:
              name: http
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: api
            port:
              name: http
---
# Rewrite /synctable/0A/ to /synctable/all/
kind: Ingress
apiVersion: networking.k8s.io/v1
metadata:
  name: map-table
  annotations:
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /synctable/all/$2
spec:
  tls:
  - hosts:
    - adsb.lol
    secretName: adsblol-tls
  rules:
  - host: map.adsb.lol
    http:
      paths:
      - path: /synctable/0A(/|$)(.*)
        pathType: Prefix
        backend:
          service:
            name: mlat-map
            port:
              name: http
